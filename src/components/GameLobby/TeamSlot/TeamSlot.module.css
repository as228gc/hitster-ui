.teamSlot {
  display: flex;
  flex-direction: column;
  max-width: 100%;
  min-height: 5rem;
  padding: 5px;
  border-radius: 5px;
  text-align: center;
  transition: transform 0.2s;

  /* add the animation, but pause it by default */
  animation: spin 2.5s infinite linear paused;
  background:
    linear-gradient(
        to bottom,
        oklch(0.1 0.2 240 / 1),
        oklch(0.1 0.2 240 / 1)
      )
      padding-box, /* ends at inner border edges */
    conic-gradient(
        from var(--bg-angle) in oklch longer hue,
        oklch(0.85 0.37 0) 0 0
      )
      border-box;
  
  /* a clear border lets the background gradient shine through */
  border: 6px solid transparent;

  /* unpause the animation on hover */
  &:hover {
    animation-play-state: running;
  }
}

.teamSlot:hover {
  transform: scale(1.05);
  cursor: pointer;
}

.filledTeam {
  border: 2px solid #ffffff4b;
  color: #ffd700;
}

.emptyTeam {
  border: 2px dashed grey;
  color: grey;
  display: flex;
  justify-content: center;
  align-items: center;
}

.emptyTeam:hover {
  border-color: #ffffff4b; /* Optional hover effect for the container border */
}

.plus {
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 3rem; /* Equal width */
  height: 3rem; /* Equal height */
  margin: auto; /* Ensure centering within parent container */
}

.verticalLine,
.horizontalLine {
  position: absolute;
  background: grey;
  border-radius: 2px; /* Rounded edges */
  transition: background-color 0.3s ease; /* Smooth transition when not hovered */
}

/* Line dimensions */
.verticalLine {
  width: 0.3rem; /* Thickness of vertical line */
  height: 80%; /* Full height of the plus container */
}

.horizontalLine {
  height: 0.3rem; /* Thickness of horizontal line */
  width: 80%; /* Full width of the plus container */
}

/* Add animation only on hover */
.emptyTeam:hover .verticalLine,
.emptyTeam:hover .horizontalLine {
  background: linear-gradient(90deg, red, orange, yellow, green, blue, indigo, violet, red);
  background-size: 200% 200%;
  animation: continuousGradient 3s linear infinite; /* Start animation on hover */
}

/* Keyframes for smooth continuous gradient flow */
@keyframes continuousGradient {
  0% {
    background-position: 0% 50%; /* Start position */
  }
  100% {
    background-position: 200% 50%; /* End position smoothly loops */
  }
}

/**
 * `@property` is required for the animation to work.
 * Without it, the angle values wonâ€™t interpolate properly.
 *
 * @see https://dev.to/afif/we-can-finally-animate-css-gradient-kdk
 */
 @property --bg-angle {
  inherits: false;
  initial-value: 0deg;
  syntax: "<angle>";
}

/**
 * To animate the gradient, we set the custom property to 1 full
 * rotation. The animation starts at the default value of `0deg`.
 */
@keyframes spin {
  to {
    --bg-angle: 360deg;
  }
}